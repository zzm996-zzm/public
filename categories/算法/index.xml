<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on 张志明</title>
    <link>https://example.com/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on 张志明</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rabin-Karp</title>
      <link>https://example.com/p/rabin-karp/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/p/rabin-karp/</guid>
      <description>今天学一下字符串Hash 题目描述 这个是前置题，如果不想看可以往后跳
这是 LeetCode 上的 「187. 重复的DNA序列」，难度为 「中等」。
Tag : 「滑动窗口」、「哈希表」、「字符串哈希」、「前缀和」
 所有 DNA 都由一系列缩写为 &#39;A&#39;，&#39;C&#39;，&#39;G&#39; 和 &#39;T&#39; 的核苷酸组成，例如：&amp;quot;ACGAATTCCG&amp;quot;。在研究 DNA 时，识别 DNA 中的重复序列有时会对研究非常有帮助。
编写一个函数来找出所有目标子串，目标子串的长度为10 ，且在 DNA 字符串 s 中出现次数超过一次。
  示例 1：
输入：s = &amp;quot;AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT&amp;quot; 输出：[&amp;quot;AAAAACCCCC&amp;quot;,&amp;quot;CCCCCAAAAA&amp;quot;] 示例 2：
输入：s = &amp;quot;AAAAAAAAAAAAA&amp;quot; 输出：[&amp;quot;AAAAAAAAAA&amp;quot;]   滑动窗口 其实最朴素的做法，看完题目我个人的第一反应就是滑动窗口，由于限定了DNA字符串长度10，所以只需要限定窗口为10，每次往右滑就行了。然后将每次滑动的结果保存到map中 ，只要map出现了重复的元素就可以添加到result里面
func findRepeatedDnaSequences(s string) []string { m:=make(map[string]int) L := 10 res := []string{} for i:=0;i&amp;lt;=len(s)-L;i++{ //获取substr  sub := s[i:L+i] m[sub] ++ //如果sub str 有2个了 那么就加入到结果集  if m[sub]==2{ res = append(res,s[i:L+i]) } } //返回结果集  return res } 字符串Hash 接着今天的主题，字符串Hash做法，在极客时间专栏中复习了一遍Java JDK hash的做法</description>
    </item>
    
  </channel>
</rss>
